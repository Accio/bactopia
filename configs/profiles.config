/*

*/
profiles {
    standard {
        process {
            withName: 'annotate_genome|make_blastdb|blast_query|plasmid_blast' {
                conda = "${baseDir}/conda/annotate_genome.yml"
            }
            withName: ariba_analysis {
                conda = "${baseDir}/conda/ariba_analysis.yml"
            }
            withName: assemble_genome {
                conda = "${baseDir}/conda/assemble_genome.yml"
            }
            withName: 'call_variants|call_variants_auto|mapping_query' {
                conda = "${baseDir}/conda/call_variants.yml"
            }
            withName: count_31mers {
                conda = "${baseDir}/conda/count_31mers.yml"
            }
            withName: download_references {
                conda = "${baseDir}/conda/download_references.yml"
            }
            withName: 'estimate_genome_size|minmer_sketch|minmer_query' {
                conda = "${baseDir}/conda/minmers.yml"
            }
            withName: insertion_sequences {
                conda = "${baseDir}/conda/insertion_sequences.yml"
            }
            withName: 'fastq_status|qc_reads|qc_original_summary|qc_final_summary' {
                conda = "${baseDir}/conda/qc_reads.yml"
            }
            withName: sequence_type {
                conda = "${baseDir}/conda/sequence_type.yml"
            }
        }
    }

    docker {
        includeConfig "${baseDir}/configs/docker.config"
    }

    awsbatch {
        includeConfig "${baseDir}/configs/docker.config"
        executor.awscli = '/home/ec2-user/miniconda/bin/aws'
        process {
            executor = 'awsbatch'
            queue = 'nextflow-large'
            memory = "8 GB"
        }
    }

    singularity {
        singularity.enabled = true
    }
}
