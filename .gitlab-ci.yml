variables:
    GIT_CLONE_PATH: '$CI_BUILDS_DIR/$CI_PIPELINE_ID/$CI_JOB_NAME'

.before_script_template: &linux_template
    before_script:
      - BACTOPIA_CI=/data/storage/bactopia-ci
      - BACTOPIA=$(pwd)
      - FQ_DIR=$(pwd)/tests/real-fastqs/
      - BACTOPIA_OPTS="--outdir ${CI_JOB_NAME} --coverage 20 --condadir ${BACTOPIA_CI}/bactopia-envs -ansi-log false -qs 4"
      - BACTOPIA_TOOL_OPTS="--bactopia ../${CI_JOB_NAME} -ansi-log false --condadir ${BACTOPIA_CI}/bactopia-envs"
      - source ${BACTOPIA_CI}/miniconda3/etc/profile.d/conda.sh
      - mkdir ${BACTOPIA}/envs
      - bash ${BACTOPIA}/bin/gh-actions/setup-bactopia-env.sh ${BACTOPIA}/envs ${BACTOPIA} 0 "${BACTOPIA}/envs/bactopia-${CI_PIPELINE_ID}" "bactopia-${CI_PIPELINE_ID}"
      - conda activate bactopia-${CI_PIPELINE_ID}

.before_script_template: &osx_template
    before_script:
      - BACTOPIA_CI=/Users/rpetit/bactopia-ci
      - BACTOPIA=$(pwd)
      - FQ_DIR=$(pwd)/tests/real-fastqs/
      - BACTOPIA_OPTS="--outdir ${CI_JOB_NAME} --coverage 20 --condadir ${BACTOPIA_CI}/bactopia-envs -ansi-log false"
      - source ${BACTOPIA_CI}/miniconda3/etc/profile.d/conda.sh
      - mkdir ${BACTOPIA}/envs
      - bash ${BACTOPIA}/bin/gh-actions/setup-bactopia-env.sh ${BACTOPIA}/envs ${BACTOPIA} 0 "${BACTOPIA}/envs/bactopia-${CI_PIPELINE_ID}" "bactopia-${CI_PIPELINE_ID}"
      - conda activate bactopia-${CI_PIPELINE_ID}

stages:
    - test_stage
    - cleanup_stage

run-bactopia-linux:
    stage: test_stage
    <<: *linux_template
    tags:
        - local
    only:
        - master
    script:
        - echo "Testing single end reads"
        - bactopia --SE ${FQ_DIR}/SRR2838702SE.fastq.gz --sample SRR2838702SE ${BACTOPIA_OPTS}
        - echo "Testing paired end reads"
        - bactopia --R1 ${FQ_DIR}/SRR2838702_R1.fastq.gz --R2 ${FQ_DIR}/SRR2838702_R2.fastq.gz --sample SRR2838702PE ${BACTOPIA_OPTS}
        - echo "Testing FOFN input"
        - bactopia prepare ${FQ_DIR} > fastqs.txt
        - bactopia --fastqs fastqs.txt ${BACTOPIA_OPTS}
        - echo "Testing SRA accession"
        - bactopia --accession SRX1390608 ${BACTOPIA_OPTS} --skip_qc
        - echo "Testing Assembly accession"
        - bactopia --accession GCF_000292685 ${BACTOPIA_OPTS}
        - echo "Testing multiple accessions"
        - bactopia --accessions tests/test-bactopia-accessions.txt ${BACTOPIA_OPTS}
        - echo "Testing with datasets"
        - bactopia datasets --skip_mlst --skip_ariba --skip_plsdb
        - bactopia datasets --species "Staphylococcus aureus" --limit 10 --skip_mlst --skip_ariba  --skip_plsdb
        - git clone -b staphopia-v1 https://github.com/bactopia/bactopia-datasets.git
        - cp -r bactopia-datasets/species-specific/ datasets/
        - rm -rf bactopia-datasets/
        - bactopia --accession GCF_003431365 --datasets datasets/ --species "Staphylococcus aureus" ${BACTOPIA_OPTS}
        - mkdir test-tool && cd test-tool && bactopia tools summary ${BACTOPIA_TOOL_OPTS}/tools-summary-${BACTOPIA_VERSION}
        - bactopia -w test | grep -v "Can only specify option -w once."

run-bactopia-osx:
    stage: test_stage
    <<: *osx_template
    tags:
        - osx
    only:
        - master
    script:
        - echo "Testing single end reads"
        - bactopia --SE ${FQ_DIR}/SRR2838702SE.fastq.gz --sample SRR2838702SE ${BACTOPIA_OPTS}
        - echo "Testing paired end reads"
        - bactopia --R1 ${FQ_DIR}/SRR2838702_R1.fastq.gz --R2 ${FQ_DIR}/SRR2838702_R2.fastq.gz --sample SRR2838702PE ${BACTOPIA_OPTS}
        - echo "Testing FOFN input"
        - bactopia prepare ${FQ_DIR} > fastqs.txt
        - bactopia --fastqs fastqs.txt ${BACTOPIA_OPTS}
        - echo "Testing SRA accession"
        - bactopia --accession SRX1390608 ${BACTOPIA_OPTS}
        - echo "Testing Assembly accession"
        - bactopia --accession GCF_000292685 ${BACTOPIA_OPTS}
        - echo "Testing multiple accessions"
        - bactopia --accessions tests/test-bactopia-accessions.txt ${BACTOPIA_OPTS}
        - echo "Testing with datasets"
        - bactopia datasets --skip_mlst --skip_ariba --skip_plsdb
        - bactopia datasets --species "Staphylococcus aureus" --limit 10 --skip_mlst --skip_ariba --skip_plsdb
        - git clone -b staphopia-v1 https://github.com/bactopia/bactopia-datasets.git
        - cp -r bactopia-datasets/species-specific/ datasets/
        - rm -rf bactopia-datasets/
        - bactopia --accession GCF_003431365 --datasets datasets/ --species "Staphylococcus aureus" ${BACTOPIA_OPTS}

cleanup-linux-runs:
    stage: cleanup_stage
    tags:
        - local
    only:
        - master
    script:
        - echo "Cleaning up Bactopia runs"
        - rm -rf ${CI_BUILDS_DIR}/${CI_PIPELINE_ID}
    dependencies:
        - run-bactopia-linux

cleanup-osx-runs:
    stage: cleanup_stage
    tags:
        - osx
    only:
        - master
    script:
        - echo "Cleaning up Bactopia runs"
        - rm -rf ${CI_BUILDS_DIR}/${CI_PIPELINE_ID}
    dependencies:
        - run-bactopia-osx
