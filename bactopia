#!/usr/bin/env bash
# bactopia
#
# This is a wrapper around Bactopia-AP for packaging the Conda recipe. It has
# been inspired by a similar wrapper in Will Rowe's DRAX pipeline
# (https://github.com/will-rowe/drax).
#
# By default `bactopia` will attmept to execute the main Nextflow pipeline.
# There are additional sub-commands available to help make Bactopia easier to
# use. They are:
#
#   pull - Pull (via Nextflow) the bactopia-ap GitHub repo
#
#   datasets - Download and setup useful datasets to supplement Bactopia
#
#   fofn - Create a FOFN of the input FASTQ files
#
#   version - Print Bactopia version and exit
#
# Examples:
#
# bactopia pull
# bactopia datasets --help
# bactopia fofn --help
# bactopia version
# bactopia --help
VERSION=1.3.0
NXF_HOME=${NXF_HOME:-`which bactopia | sed 's=bin/bactopia=.nextflow='`}
BACTOPIA_NF="${NXF_HOME}/assets/bactopia/bactopia"
export NXF_HOME=${NXF_HOME}

# If no user input, print usage
if [[ $# == 0 ]]; then
    echo "bactopia - v${VERSION}"
    echo ""
    echo "Available Commands"
    echo "\`bactopia\` - Execute the Bactopia Nextflow pipeline"
    echo ""
    echo "\`bactopia build\` - Build Bactopia Conda environments"
    echo ""
    echo "\`bactopia datasets\` - Download/setup useful datasets for Bactopia"
    echo ""
    echo "\`bactopia prepare\` - Create a 'file of filenames' for input FASTQ files"
    echo ""
    echo "\`bactopia search\` - Query Taxon ID or Study Accession against ENA for input accessions"
    echo ""
    echo "\`bactopia tools\` - Execute existing Bactopia Tools"
    echo ""
    echo "\`bactopia version\` - Print Bactopia version and exit"
    echo ""
    echo "Print Usages:"
    echo "\`bactopia --help\`"
    echo "\`bactopia datasets --help\`"
    echo "\`bactopia prepare --help\`"
    echo "\`bactopia search --help\`"
    echo "\`bactopia tools --help\`"
    echo ""
    echo "Example Commands"
    echo "bactopia --R1 SAMPLE_R1.fastq.gz --R2 SAMPLE_R2.fastq.gz --sample SAMPLE"
    echo ""
    echo "bactopia build /path/to/bactopia/conda-yml /path/to/install/conda/environments"
    echo ""
    echo "bactopia datasets dataset-dir --species 'Staphylococcus aureus'"
    echo "bactopia --dataset dataset-dir --species 'staphylococcus-aureus' --accession SRX4563671"
    echo ""
    echo "bactopia prepare my-fastq-dir > my-fastqs.txt"
    echo "bactopia --fastqs my-fastqs.txt"
    echo ""
    echo "bactopia search PRJNA480016 --limit 20"
    echo "bactopia --accessions ena-accessions.txt"
    echo ""
    exit
fi

if [[ "$1" == "datasets" ]]; then
    setup-datasets.py "${@:2}"
elif [[ "$1" == "prepare" ]]; then
    prepare-fofn.py "${@:2}"
elif [[ "$1" == "search" ]]; then
    ena-search.py "${@:2}"
elif [[ "$1" == "build" ]]; then
    build-conda-envs.py "${@:2}"
elif [[ "$1" == "tools" ]]; then
    bactopia-tools.py "${BACTOPIA_NF} ${@:2}"
elif [[ "$1" == "version" ]] || [[ "$1" == "--version" ]]; then
    echo "bactopia ${VERSION}"
else
    # Check if Conda environments need to be built
    BUILD_CONDA=1
    CHECKS=("condadir" "docker" "singularity" "slurm" "help" "help_all" "conda_help") 
    for check in  "${CHECKS[@]}"; do
        if [[ "$*" == *"${check}"* ]]; then
            BUILD_CONDA=0
        fi
    done

    if [[ "${BUILD_CONDA}" -eq 1 ]]; then
        # Figure out where Bactopia is setup
        if [[ ! -f "${BACTOPIA_NF}/conda/envs/envs-built-${VERSION}.txt" ]]; then
            echo "Unable to locate required Conda environments."
            echo "Building to ${BACTOPIA_NF}/conda/envs ... This might take a while"
            build-conda-envs.py ${BACTOPIA_NF}/conda ${BACTOPIA_NF}/conda/envs --force
        fi
    fi
    # Execute Bactopia Nextflow pipeline
    nextflow run ${BACTOPIA_NF}/main.nf "${@:1}"
fi
