// Available Bactopia tools

params {
    available_workflows {
        bactopia = ['bactopia', 'staphopia']
        bactopiatools = ['staphtyper', 'agrvate', 'spatyper', 'staphopiasccmec']
    }
    workflows {
        // Named Workflows (Main Bactopia)
        'bactopia' {
            description = "Bactopia is a flexible pipeline for complete analysis of bacterial genomes."
            includes = ["bactopia"]
            is_workflow = true
            modules = ["gather_samples", "qc_reads", "assemble_genome", "assembly_qc", "annotate_genome", "minmer_sketch",
                       "minmer_query", "antimicrobial_resistance", "ariba_analysis", "minmer_query", "blast", "call_variants",
                       "mapping_query", "sequence_type"]
        }
        'staphopia' {
            // Example of a 'wrapper' workflow
            description = "Staphopia is a flexible pipeline for complete analysis of Staphylococcus aureus genomes."
            includes = ["bactopia", "staphtyper"]
            is_workflow = true
        }

        // Named Subworkflows (Bactopia Tools)
        'staphtyper' {
            description = "A subworflow which includes AgrVATE, SpaTyper and Staphpopia SCCmec for analysis of Staphylococcus aureus"
            ext = "fna"
            modules = ["agrvate", "spatyper", "staphopiasccmec"]
        }

        // Modules (houses params.json and params.config, where applicable can be subworkflow)
        // local
        'annotate_genome' {
            path = "modules/local/bactopia/annotate_genome"
        }
        'antimicrobial_resistance' {
            path = "modules/local/bactopia/antimicrobial_resistance"
        }
        'ariba_analysis' {
            path = "modules/local/bactopia/ariba_analysis"
        }
        'assemble_genome' {
            path = "modules/local/bactopia/assemble_genome"
        }
        'assembly_qc' {
            path = "modules/local/bactopia/assembly_qc"
        }
        'blast' {
            path = "modules/local/bactopia/blast"
        }
        'call_variants' {
            path = "modules/local/bactopia/call_variants"
        }
        'gather_samples' {
            path = "modules/local/bactopia/gather_samples"
        }
        'mapping_query' {
            path = "modules/local/bactopia/mapping_query"
        }
        'minmer_query' {
            path = "modules/local/bactopia/minmer_query"
        }
        'minmer_sketch' {
            path = "modules/local/bactopia/minmer_sketch"
        }
        'qc_reads' {
            path = "modules/local/bactopia/qc_reads"
        }
        'sequence_type' {
            path = "modules/local/bactopia/sequence_type"
        }

        // nf-core/modules
        'agrvate' {
            description = "Rapid identification of Staphylococcus aureus agr locus type and agr operon variants."
            ext = "fna"
            path = "modules/nf-core/modules/agrvate"
        }
        'kleborate' {
            description = "Screen for MLST, sub-species, and other Klebsiella related genes of interest"
            ext = "fna"
            path = "modules/nf-core/modules/kleborate"
        }
        'mashtree' {
            description = "Create a trees using Mash distance"
            ext = "fna"
            path = "modules/nf-core/modules/mashtree"
        }
        'spatyper' {
            description = "Computational method for finding spa types in Staphylococcus aureus"
            ext = "fna"
            path = "modules/nf-core/modules/spatyper"
        }
        'staphopiasccmec' {
            description = "Primer based SCCmec typing of Staphylococcus aureus genomes"
            ext = "fna"
            path = "modules/nf-core/modules/staphopiasccmec"
        }
    }
}
